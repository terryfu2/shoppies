{"version":3,"sources":["constants.js","js/components/NavBar.js","js/components/Footer.js","js/components/Banner.js","js/components/SearchBar.js","js/components/MovieResult.js","js/components/ResultsList.js","js/components/Nomination.js","js/components/modal/NominationsModal.js","js/App.js","reportWebVitals.js","index.js"],"names":["URL","NavBar","props","state","showModal","Fragment","Navbar","fixed","Collapse","id","Nav","className","Link","style","fontSize","color","onClick","_toggleShowModal","React","Component","Footer","mode","Brand","Banner","Object","keys","this","nominations","length","fontWeight","Container","Row","Col","md","_getNominationsRemaining","SearchBar","Form","paddingBottom","inline","FormControl","onChange","_updateQuery","value","query","width","type","placeholder","MovieResult","Jumbotron","isNominated","display","src","res","Poster","height","alt","Title","Year","_renderButton","_renderMovieDetails","imdbID","paddingTop","backgroundColor","cursor","_toggleViewMovie","ResultsList","movieData","JSON","parse","localStorage","getItem","Button","_toggleNomination","axios","get","response","data","Director","imdbRating","BoxOffice","Plot","setState","director","rating","boxOffice","plot","fetching","error","results","map","index","is","_renderList","Nomination","paddingLeft","paddingRight","nomination","NominationsModal","list","push","nom","Modal","show","onHide","Header","closeButton","Body","_renderNominations","App","notification","nominated","setItem","stringify","_appendNotification","body","Toast","minWidth","zIndex","position","bottom","right","onClose","delay","autohide","e","target","_getResults","Error","Search","window","innerHeight","numberOfPieces","recycle","_renderConfetti","_toggleDarkLightMode","_renderNotifications","span","offset","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c27172bd.chunk.js","sourcesContent":["export const URL = \"https://www.omdbapi.com/?apikey=4e2532db&\";","import React from 'react';\n\n\nimport { Navbar, Nav } from 'react-bootstrap';\n\nexport default class NavBar extends React.Component {\n    constructor(props) { \n        super(props);\n\n        this.state = {\n            showModal: false\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Navbar fixed={\"top\"}>\n                    \n                        <Navbar.Collapse id=\"basic-navbar-nav\">\n                        <Nav className=\"mr-auto\" />\n                        <Nav.Link style={{fontSize: \"25px\", color:\"white\"}} onClick={() => this.props._toggleShowModal()}>Nominations</Nav.Link>\n\n                    </Navbar.Collapse>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\n\nimport { Navbar } from 'react-bootstrap';\n\nexport default class Footer extends React.Component {\n    constructor(props) { \n        super(props);\n\n        this.state = {\n            mode: \"light\",\n            showModal: false\n        }\n    }\n\n    render() {\n        return (\n            <Navbar fixed={\"bottom\"}>\n                <Navbar.Brand style={{fontSize: \"10px\"}}>Terry Fu 2021</Navbar.Brand>\n            </Navbar>\n        );\n    }\n}","import React from 'react';\n\nimport { Container, Row, Col } from 'react-bootstrap';\n\nexport default class Banner extends React.Component {\n\n    _getNominationsRemaining() {\n        if(Object.keys(this.props.nominations).length === 5) {\n            return <span style={{fontWeight: \"800\"}}>You completed your nominations </span>;\n        } else {\n            return <span style={{fontWeight: \"200\"}}>You have <span style={{fontWeight: \"800\"}}>{5 - Object.keys(this.props.nominations).length}</span> nominations left</span>\n        }\n    }\n\n    render() {\n        return (\n            <header className=\"header\">\n                <Container>\n                    <Row>\n                        <Col md={6}>\n                            <h1 className=\"title\">Shoppies</h1>\n                            <p style={{fontSize: \"25px\", fontWeight: \"200\"}}>Shopify Challenge 2021</p>\n                        </Col>\n\n                        <Col md={6} className=\"my-auto text-center\">\n                            <p style={{fontSize: \"25px\"}}>{this._getNominationsRemaining()}</p>\n                        </Col>\n                    </Row>\n                </Container>\n            </header>\n        );\n    }\n}","import React from 'react';\n\nimport { Form, FormControl } from 'react-bootstrap';\n\nexport default class SearchBar extends React.Component {\n    render() {\n        return (\n            <Form style={{paddingBottom: \"10px\"}} inline>\n                <FormControl onChange={this.props._updateQuery} value={this.props.query} style={{width: \"100%\"}} type=\"text\" placeholder={`\"Search for a Movie\"`} className=\"mr-sm-2\" />\n            </Form>\n        );\n    }\n}","import React from 'react';\n\nimport { Jumbotron, Container, Row, Col } from 'react-bootstrap';\n\nexport default class MovieResult extends React.Component {\n    render() {\n        return (\n            <Jumbotron style={{paddingBottom: \"0px\"}} className={(this.props.isNominated) ? \"nominated-jumbo\" : \"nominate-jumbo\"}>\n                <Container>\n                    <Row>\n                        <Col md={6} className=\"d-flex justify-content-center\">\n                            <img style={{display: \"flex\"}} src={this.props.res.Poster} height=\"100%\" width=\"auto\" alt=\"poster\"/>\n                        </Col>\n\n                        <Col md={6} className=\"my-auto text-center\" style={{color: (this.props.isNominated) ? \"#FFFFFF\" : \"#3E4348\"}}>\n                            <h3 className=\"title\" style={{display: \"block\"}}>{this.props.res.Title}</h3>\n                            <p>({this.props.res.Year})</p>\n                            {this.props._renderButton(this.props.res)}\n                        </Col>\n                    </Row>\n\n                    {this.props._renderMovieDetails(this.props.res.imdbID, this.props.isNominated)}\n            \n                    <Row>\n                        <Col md={3} style={{paddingTop: \"15px\", paddingBottom: \"15px\"}}><hr style={{backgroundColor: \"white\"}} /></Col>\n                        <Col md={6} \n                            className=\"text-center\" style={{paddingTop: \"15px\", paddingBottom: \"15px\", cursor: \"pointer\", color: (this.props.isNominated) ? \"#FFFFFF\" : \"#3E4348\"}} \n                            onClick={() => this.props._toggleViewMovie(this.props.res.imdbID)}>\n                            Movie details\n                        </Col>\n                        <Col md={3} style={{paddingTop: \"15px\", paddingBottom: \"15px\"}}><hr style={{backgroundColor: \"white\"}} /></Col>\n                    </Row>\n                </Container>\n        </Jumbotron>\n        );\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { URL } from '../../constants';\n\nimport MovieResult from './MovieResult';\n\nimport { Col, Row, Button } from 'react-bootstrap';\n\nexport default class ResultsList extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            movieData: {}\n        }\n    }\n    _renderButton(res) {\n        var nominations = JSON.parse(localStorage.getItem('nominations'));\n\n        if(!nominations) {\n            return <Button className=\"nominate-btn\" onClick={() => this.props._toggleNomination(res)}>Nominate</Button>;\n        } else {\n            if(nominations[res.imdbID]) {\n                return <Button className=\"de-nominate-btn\" onClick={() => this.props._toggleNomination(res)}>Remove nomination</Button>;\n            } else if(Object.keys(nominations).length < 5){\n                return <Button className=\"nominate-btn\" onClick={() => this.props._toggleNomination(res)}>Nominate</Button>;\n            } else {\n                return null;\n            }\n        }\n\n    };\n\n    async _toggleViewMovie(id) {\n        const response = await axios.get(URL + `i=${id}`);\n        \n        if(response.data) {\n            let movieData = {\n                \"director\": response.data.Director,\n                \"rating\": response.data.imdbRating,\n                \"boxOffice\": response.data.BoxOffice,\n                \"plot\": response.data.Plot,\n                \"imdbID\": response.data.imdbID\n\n            }\n\n            this.setState({ movieData });\n        }\n    };\n\n    _renderMovieDetails(id, isNominated) {\n        let { movieData } = this.state;\n    \n        if(Object.keys(movieData).length !== 0 && movieData.imdbID === id) {\n            return (\n                <Row style={{paddingTop: \"20px\", color: (isNominated) ? \"#FFFFFF\" : \"#3E4348\"}}>\n                    <Col md={4}>\n                        🎬 {movieData.director}\n                    </Col>\n\n                    <Col md={4}>\n                        🌟 {movieData.rating}\n                    </Col>\n\n                    <Col md={4}>\n                        💰 {movieData.boxOffice}\n                    </Col>\n\n                    <Col md ={12} style={{paddingTop: \"20px\"}}>\n                        {movieData.plot}\n                    </Col>\n                </Row>\n            );\n        }\n\n        return null;\n    };\n\n    _renderList() {\n        var nominations = JSON.parse(localStorage.getItem('nominations'));\n\n        if(this.props.fetching) {\n            return <i className=\"fas fa-search fa-pulse\"></i>\n        }\n\n        if(this.props.error) {\n            return (\n                <p>{this.props.error} Error</p>\n            );\n        } else {\n            if(this.props.results.length < 1) {\n                return (\n                    <p>Search for a movie to nominate </p>\n                );\n            } else {\n                let list = [];\n\n                list = this.props.results.map((res, index) => {\n                    return <MovieResult \n                            key={index}\n                            res={res}\n                            isNominated={((nominations && nominations[res.imdbID]) ? true : false)}\n                            _renderMovieDetails={(id, is) => this._renderMovieDetails(id, is)}\n                            _toggleViewMovie={(id) => this._toggleViewMovie(id)}\n                            _renderButton={(res) => this._renderButton(res)}\n                        />\n                });\n    \n                return list;   \n            }\n        }\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                {this._renderList()}\n            </React.Fragment>\n        );\n    }\n}","import React from 'react';\n\nimport { Jumbotron, Container, Row, Col, Button } from 'react-bootstrap';\n\nexport default class Nomination extends React.Component {\n    render() {\n        return (\n            <Jumbotron style={{color: \"#FFFFFF\", backgroundColor: \"#3b00c4ec\", paddingTop: \"10px\", paddingBottom: \"10px\", paddingLeft: \"10px\", paddingRight: \"10px\"}}>\n                <Container>\n                    <Row>\n                        <Col md={4} className=\"d-flex justify-content-center\">\n                            <img style={{display: \"flex\"}} src={this.props.nominations[this.props.nomination].Poster} height=\"150px\" width=\"125px\" alt=\"poster\"/>\n                        </Col>\n\n                        <Col md={8} className=\"my-auto text-center\">\n                            <h5 className=\"title\" style={{display: \"block\"}}>{this.props.nominations[this.props.nomination].Title}</h5>\n                            <p>({this.props.nominations[this.props.nomination].Year})</p>\n                            <Button className=\"de-nominate-btn\" onClick={() => this.props._toggleNomination(this.props.nominations[this.props.nomination])}>Remove nomination</Button>\n                        </Col>\n                    </Row>\n                </Container>\n        </Jumbotron>\n        );\n    }\n}","import React from 'react';\n\nimport { Modal } from 'react-bootstrap';\n\nimport Nomination from '../Nomination';\n\nexport default class NominationsModal extends React.Component {\n    \n    _renderNominations() {\n        if(Object.keys(this.props.nominations).length === 0) {\n            return <p>Start nominating some movies </p>\n        } else {\n            let list = [];\n\n            for(let nomination in this.props.nominations) {\n                list.push(\n                    <Nomination \n                        nominations={this.props.nominations}\n                        nomination={nomination}\n                        _toggleNomination={(nom) => this.props._toggleNomination(nom)}\n                    />\n                );\n            }\n\n            return list;\n        }\n    }\n\n    render() {\n        return (\n            <Modal show={this.props.showModal} onHide={this.props._toggleShowModal}>\n                <Modal.Header closeButton>\n                    <Modal.Title>Your Nominations</Modal.Title>\n                </Modal.Header>\n\n                <Modal.Body>\n                    {this._renderNominations()}\n                </Modal.Body>\n\n            </Modal>\n        );\n    }\n}","import React from 'react';\nimport axios from 'axios';\n\nimport { URL } from '../constants';\n\nimport Confetti from 'react-confetti'\n\nimport NavBar from './components/NavBar';\nimport Footer from './components/Footer';\nimport Banner from './components/Banner';\nimport SearchBar from './components/SearchBar';\nimport ResultsList from './components/ResultsList';\nimport NominationsModal from './components/modal/NominationsModal';\n\nimport { Container, Row, Col, Toast } from 'react-bootstrap';\n\nimport \"../css/theme.css\";\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            query: \"\",\n            fetching: false,\n            nominations: localStorage.getItem('nominations') ? JSON.parse(localStorage.getItem('nominations')) : {},\n\n            results: [],\n            error: null,\n\n            showModal: false,\n\n            notification: null\n        }\n    };\n\n    _toggleNomination(res) {\n        var nominations = localStorage.getItem('nominations') ? JSON.parse(localStorage.getItem('nominations')) : {};\n        let nominated = false;\n\n        if(nominations && nominations[res.imdbID]) {\n            delete nominations[res.imdbID];\n            \n        } else {\n            nominations[res.imdbID] = res;\n            nominated = true;\n        }\n\n        localStorage.setItem('nominations', JSON.stringify(nominations));\n\n        this.setState({ nominations });\n\n        this._appendNotification(res, nominated);\n    };\n\n    _appendNotification(res, nominated=false) {\n        let { notification } = this.state;\n\n        let body = null;\n\n        if(nominated) {\n            body = (\n                <React.Fragment>\n                    <Toast.Header closeButton={false}>\n                         <strong>Nominated!</strong>\n                    </Toast.Header>\n                    <Toast.Body>You nominated {res.Title}!</Toast.Body>\n                </React.Fragment>\n            );\n        } else {\n            body = (\n                <React.Fragment>\n                    <Toast.Header closeButton={false}>\n                        <strong>Removed Nominated!</strong>\n                    </Toast.Header>\n                    <Toast.Body>You removed the nomination for {res.Title}!</Toast.Body>\n                </React.Fragment>\n            );\n        }\n\n        notification = (\n            <Toast \n                style={{\n                    minWidth: \"350px\",\n                    zIndex: \"9999\",\n                    position: \"fixed\",\n                    bottom: 10,\n                    right: 10,\n                }}\n                onClose={() => this.setState({notification: null})} \n                show={true} \n                delay={4000} \n                \n                autohide>\n                {body}\n            </Toast>\n        );\n\n        this.setState({ notification });\n    };\n\n    _renderNotifications() {\n        let { notification } = this.state;\n\n        return (\n            <React.Fragment>\n                {notification}\n            </React.Fragment>\n        )\n    }\n\n    _updateQuery(e) {\n        if(e.target.value.length > 0) {\n            this._getResults(e.target.value);\n            this.setState({ query: e.target.value });\n        } else {\n            this.setState({\n                results: [],\n                query: \"\",\n                error: null\n            });\n        }\n    };\n\n    async _getResults(query) {\n        this.setState({ fetching: true });\n        const response = await axios.get(URL + `s=${query}&type=movie`);\n\n        if(query.length === 0) {\n            this.setState({\n                results: [],\n                error: null,\n            });\n        } else {\n            if(response.data.Error) {\n                this.setState({\n                    results: [],\n                    error: response.data.Error\n                });\n            } else {\n                this.setState({\n                    results: response.data.Search,\n                    error: null\n                });\n            }\n        }\n\n        this.setState({ fetching: false });\n    };\n\n    _toggleShowModal() {\n        this.setState({showModal: !this.state.showModal})\n    };\n\n    _renderModal() {\n        let { showModal } = this.state;\n\n        if(showModal) {\n            return <NominationsModal showModal={this.state.showModal}/>\n        }\n\n        return null;\n    };\n\n    _renderConfetti() {\n        let { nominations } = this.state;\n\n        if(Object.keys(nominations).length === 5) {\n            return <Confetti style={{position: \"absolute\"}} height={window.innerHeight} numberOfPieces={400} recycle={false}/>;\n        }\n\n        return null;\n    };\n\n    render() {\n\n        let { mode, fetching, nominations, showModal, results, query, error, notification } = this.state;\n\n        return (\n            <React.Fragment>\n                {this._renderConfetti()}\n                <div className=\"main\">\n                    <NominationsModal _toggleNomination={(res) => this._toggleNomination(res)} nominations={nominations} showModal={showModal} _toggleShowModal={() => this._toggleShowModal()}/>\n                    <NavBar mode={mode} _toggleShowModal={() => this._toggleShowModal()} _toggleDarkLightMode={() => this._toggleDarkLightMode()} />\n                    {(notification) ? this._renderNotifications() : null}\n                    <Banner nominations={nominations} />\n                    <Container style={{paddingTop: \"50px\"}}>\n                        <Row>\n                            <Col md={{span: 8, offset: 2}}>\n                                <SearchBar query={query} _updateQuery={(e) => this._updateQuery(e)} />\n                                <ResultsList fetching={fetching} _toggleNomination={(res) => this._toggleNomination(res)} results={results} error={error}/>\n                            </Col>\n                        </Row>\n                    </Container>\n                    <Footer />\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './js/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}